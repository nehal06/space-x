{"version":3,"sources":["Components/error-404.svg","Components/nav.js","Pages/home.js","Components/launchCard.js","Pages/launchpads.js","Components/missionCard.js","Pages/missions.js","Pages/payload.js","Pages/notFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","nav","className","to","home","props","items","i","push","key","id","launchCard","launchpads","readMore","React","createRef","map","obj","index","title","site_name_long","name","status","replace","location","region","ref","charLimit","readMoreText","readLessText","details","launchpad","onSelectChange","e","val","target","value","filteredLaunchpads","state","allLaunchpads","length","filter","o","setState","selectVal","showNoData","statusArray","axios","get","then","response","console","log","data","includes","catch","error","htmlFor","onChange","this","Component","missionCard","missions","mission_name","description","payload_ids","allMissions","payload","payloadData","match","params","src","payload_id","manufacturer","nationality","orbit","payload_mass_kg","notFound","App","exact","path","component","HomeComponent","particle","Launchpads","Missions","Payloads","NotFoundComponent","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a30cc6a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-404.9174ed1c.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst nav = () => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">SpaceX</Link>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <Link to=\"/launchpads\"> Launchpads</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/missions\"> Missions</Link>\r\n        </li>\r\n        {/* <li>\r\n          <Link to=\"/payload/1\">Payload</Link>\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default nav;\r\n","import React from 'react';\r\nimport '../css/particle.css';\r\n// import dog from '../Components/astronaut.svg';\r\nconst home = props => {\r\n  const items = [];\r\n  for (let i = 0; i <= 1000; i++) {\r\n    items.push(<div className=\"particle\" key={`p${i}`}></div>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"particle-container\">\r\n      {items}\r\n\r\n      {/* <div className=\"spaceImg\">\r\n        <img src={dog} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport ReadMoreAndLess from 'react-read-more-less';\r\nconst launchCard = props => {\r\n  const { launchpads } = props;\r\n  let readMore = React.createRef();\r\n  return (\r\n    <Fragment>\r\n      {launchpads.map((obj, index) => (\r\n        <div className=\"card\" key={index}>\r\n          <div className=\"card-content\">\r\n            <h6 title={obj.site_name_long} className=\"title\">\r\n              {obj.name}\r\n            </h6>\r\n            <span className={`status ${obj.status.replace(' ', '-')}`}>\r\n              <i>{obj.status}</i>\r\n            </span>\r\n            <p className=\"location\">\r\n              <i>{`${obj.location.name} , ${obj.location.region}`}</i>\r\n            </p>\r\n            <ReadMoreAndLess\r\n              ref={readMore}\r\n              className=\"read-more-content\"\r\n              charLimit={250}\r\n              readMoreText=\"Read more\"\r\n              readLessText=\"Read less\"\r\n            >\r\n              {obj.details}\r\n            </ReadMoreAndLess>\r\n            {/* <p>{obj.details}</p> */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default launchCard;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Card from '../Components/launchCard';\r\nimport PropTypes from 'prop-types';\r\nclass launchpad extends Component {\r\n  static propTypes = {\r\n    allLaunchpads: PropTypes.array,\r\n    filteredLaunchpads: PropTypes.array,\r\n    statusArray: PropTypes.array,\r\n    showNoData: PropTypes.bool,\r\n    selectVal: PropTypes.string\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNoData: false,\r\n      allLaunchpads: [],\r\n      filteredLaunchpads: [],\r\n      statusArray: [],\r\n      selectVal: 'All'\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get('https://api.spacexdata.com/v3/launchpads')\r\n      .then(response => {\r\n        // handle success\r\n        console.log(response.data);\r\n\r\n        if (response.status == 200) {\r\n          let statusArray = [];\r\n          response.data.map(obj => {\r\n            if (statusArray.length == 0) {\r\n              statusArray.push(obj.status);\r\n            } else if (!statusArray.includes(obj.status)) {\r\n              statusArray.push(obj.status);\r\n            }\r\n          });\r\n          this.setState({\r\n            allLaunchpads: response.data,\r\n            filteredLaunchpads: response.data,\r\n            statusArray\r\n          });\r\n        } else {\r\n          this.setState({ showNoData: true });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onSelectChange = e => {\r\n    let val = e.target.value;\r\n    let filteredLaunchpads = [];\r\n    if (val != 'All') {\r\n      filteredLaunchpads =\r\n        this.state.allLaunchpads.length != 0\r\n          ? this.state.allLaunchpads.filter(o => o.status == val)\r\n          : [];\r\n    } else {\r\n      filteredLaunchpads = this.state.allLaunchpads;\r\n    }\r\n\r\n    this.setState({ filteredLaunchpads, selectVal: val });\r\n  };\r\n  render() {\r\n    console.log('render');\r\n    return (\r\n      <Fragment>\r\n        <div className=\"filterRow\">\r\n          <label htmlFor=\"statusFilter\" className=\"selectLabel\">\r\n            Status Filter\r\n          </label>\r\n          <select\r\n            id=\"statusFilter\"\r\n            onChange={this.onSelectChange}\r\n            value={this.state.value}\r\n          >\r\n            <option value=\"All\">All</option>\r\n            {this.state.statusArray.map((o, i) => (\r\n              <option value={o} key={i}>\r\n                {o}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"grid-container\">\r\n          {this.state.showNoData && (\r\n            <div className=\"noDataFound\">\r\n              <h4>No Data Found</h4>\r\n            </div>\r\n          )}\r\n          {!this.state.showNoData && (\r\n            <Card launchpads={this.state.filteredLaunchpads} />\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default launchpad;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMoreAndLess from 'react-read-more-less';\r\nconst missionCard = props => {\r\n  const { missions } = props;\r\n  let readMore = React.createRef();\r\n  return (\r\n    <Fragment>\r\n      {missions.map((obj, index) => (\r\n        <div className=\"card\" key={index}>\r\n          <div className=\"card-content\">\r\n            <h6 title={obj.mission_name} className=\"title\">\r\n              {obj.mission_name}\r\n            </h6>\r\n            <ReadMoreAndLess\r\n              ref={readMore}\r\n              className=\"read-more-content\"\r\n              charLimit={250}\r\n              readMoreText=\"Read more\"\r\n              readLessText=\"Read less\"\r\n            >\r\n              {obj.description}\r\n            </ReadMoreAndLess>\r\n            <hr className=\"new\" />\r\n            {obj.payload_ids.map((o, i) => (\r\n              <span className=\"chip\" key={`k_${i}`}>\r\n                <Link to={`/payload/${o}`}>\r\n                  <i>{o}</i>\r\n                </Link>\r\n              </span>\r\n            ))}\r\n\r\n            {/* <p>{obj.description}</p> */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default missionCard;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Card from '../Components/missionCard';\r\nclass missions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNoData: false,\r\n      allMissions: []\r\n    };\r\n  }\r\n  static propTypes = {\r\n    showNoData: PropTypes.bool,\r\n    allMissions: PropTypes.array\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('https://api.spacexdata.com/v3/missions')\r\n      .then(response => {\r\n        // handle success\r\n        console.log(response.data);\r\n\r\n        if (response.status == 200) {\r\n          this.setState({\r\n            allMissions: response.data\r\n          });\r\n        } else {\r\n          this.setState({ showNoData: true });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container2\">\r\n        {this.state.showNoData && (\r\n          <div className=\"noDataFound\">\r\n            <h4>No Data Found</h4>\r\n          </div>\r\n        )}\r\n        {!this.state.showNoData && <Card missions={this.state.allMissions} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default missions;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport error from '../Components/error-404.svg';\r\nclass payload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNoData: false,\r\n      payloadData: {},\r\n      status: 200\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.spacexdata.com/v3/payloads/${this.props.match.params.id}`\r\n      )\r\n      .then(response => {\r\n        if (response.status == 200) {\r\n          this.setState({ payloadData: response.data });\r\n        } else {\r\n          console.log(response.data);\r\n          this.setState({ showNoData: true, status: response.status });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ showNoData: true, status: 404 });\r\n      });\r\n  }\r\n  render() {\r\n    const { payloadData, status } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {this.state.showNoData && (\r\n          <div className=\"noDataFound\">\r\n            <img src={error} />\r\n          </div>\r\n        )}\r\n\r\n        {!this.state.showNoData && (\r\n          <div className=\"payloadData card\">\r\n            <h1 className=\"mainTitle\">Payload</h1>\r\n            <h6 className=\"title\">{payloadData.payload_id}</h6>\r\n\r\n            {payloadData.manufacturer && (\r\n              <h6 className=\"secondaryText\">{`Nationality : ${payloadData.nationality}`}</h6>\r\n            )}\r\n            {payloadData.manufacturer && (\r\n              <h6 className=\"secondaryText\">{`Manufacturer : ${payloadData.manufacturer}`}</h6>\r\n            )}\r\n            {payloadData.orbit && (\r\n              <h6 className=\"secondaryText\">{`Orbit : ${payloadData.orbit}`}</h6>\r\n            )}\r\n            {payloadData.payload_mass_kg && (\r\n              <h6 className=\"secondaryText\">{`Mass : ${payloadData.payload_mass_kg} kg`}</h6>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default payload;\r\n","import React from 'react';\r\nimport error from '../Components/error-404.svg';\r\nconst notFound = () => {\r\n  return (\r\n    <div className=\"noDataFound\">\r\n      <img src={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default notFound;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport './css/Index.css';\n// import './App.css';\nimport Nav from './Components/nav';\nimport HomeComponent from './Pages/home';\nimport Launchpads from './Pages/launchpads';\nimport Missions from './Pages/missions';\nimport Payloads from './Pages/payload';\nimport NotFoundComponent from './Pages/notFound';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={HomeComponent}\n            particle={100}\n          ></Route>\n          <Route exact path=\"/launchpads\" component={Launchpads}></Route>\n          <Route exact path=\"/missions\" component={Missions}></Route>\n          <Route exact path=\"/payload/:id\" component={Payloads}></Route>\n          <Route component={NotFoundComponent}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}